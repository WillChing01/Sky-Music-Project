{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamg\\\\Documents\\\\temp\\\\sky\\\\Sky-Music-Project\\\\my-app\\\\src\\\\components\\\\ViewContainer\\\\ViewContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { captilizeFirstLetter } from '../../utility/format/formatStr';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getPlaylistInfo } from '../../utility/parseMusicItem';\nimport { pushPlaylist } from '../../state/slices/playablePlaylist/playablePlaylistSlice';\nimport List from '../List/List';\nimport Grid from '../Grid/Grid';\nimport './ViewContainer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ViewContainer = _ref => {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const channelsOpen = useSelector(state => state.filter.channelsOpen);\n  const view = useSelector(state => state.view.value);\n  const dispatch = useDispatch();\n  const channelTypes = ['tracks', 'albums', 'artists'];\n  const channels = channelTypes.map(type => ({\n    type,\n    open: channelsOpen[type],\n    ...data[type]\n  }));\n  useEffect(() => {\n    const playlist = getPlaylistInfo(channels[0].items);\n    dispatch(pushPlaylist(playlist));\n  }, [data]);\n\n  const getDisplay = channel => {\n    const isGridView = view === 'grid';\n    const props = {\n      channelItems: channel.items\n    };\n\n    const GridDisplay = /*#__PURE__*/_jsxDEV(Grid, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 29\n    }, this);\n\n    const ListDisplay = /*#__PURE__*/_jsxDEV(List, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }, this);\n\n    const display = isGridView ? GridDisplay : ListDisplay;\n    return display;\n  };\n\n  const getNoDisplay = channel => {\n    const noDisplay = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"No \", channel.type, \" were found\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 27\n    }, this);\n\n    return noDisplay;\n  };\n\n  const getChannelDisplay = channel => {\n    const display = getDisplay(channel);\n    const noDisplay = getNoDisplay(channel);\n    const title = captilizeFirstLetter(channel.type);\n    let body;\n    if (channel.pendingMsg) body = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: channel.pendingMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 40\n    }, this);else if (channel.error.statusCode) body = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: channel.error.userMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 51\n    }, this);else body = channel.items.length ? display : noDisplay;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), body]\n    }, void 0, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: channels.map((channel, index) => {\n      if (channel.open) {\n        const channelDisplay = getChannelDisplay(channel);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: channelDisplay\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this);\n      } else {\n        return null;\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ViewContainer, \"x8LfcciP4zAayJC/x2F4dK1gHpE=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = ViewContainer;\nexport default ViewContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewContainer\");","map":{"version":3,"names":["useEffect","captilizeFirstLetter","useSelector","useDispatch","getPlaylistInfo","pushPlaylist","List","Grid","ViewContainer","data","channelsOpen","state","filter","view","value","dispatch","channelTypes","channels","map","type","open","playlist","items","getDisplay","channel","isGridView","props","channelItems","GridDisplay","ListDisplay","display","getNoDisplay","noDisplay","getChannelDisplay","title","body","pendingMsg","error","statusCode","userMsg","length","index","channelDisplay"],"sources":["C:/Users/adamg/Documents/temp/sky/Sky-Music-Project/my-app/src/components/ViewContainer/ViewContainer.js"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { captilizeFirstLetter } from '../../utility/format/formatStr';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getPlaylistInfo } from '../../utility/parseMusicItem';\r\nimport { pushPlaylist } from '../../state/slices/playablePlaylist/playablePlaylistSlice';\r\n\r\nimport List from '../List/List';\r\nimport Grid from '../Grid/Grid';\r\n\r\nimport './ViewContainer.css';\r\n\r\nconst ViewContainer = ({ data }) => {\r\n    const channelsOpen = useSelector((state) => state.filter.channelsOpen);\r\n    const view = useSelector((state) => state.view.value);\r\n    const dispatch = useDispatch();\r\n\r\n    const channelTypes = ['tracks', 'albums', 'artists'];\r\n    const channels = channelTypes.map(type => (\r\n        {\r\n        type,\r\n        open: channelsOpen[type],\r\n        ...data[type]\r\n      }  \r\n      )\r\n    ); \r\n\r\n    useEffect(() => {\r\n        const playlist = getPlaylistInfo(channels[0].items);\r\n        dispatch(pushPlaylist(playlist));\r\n    }, [data]);\r\n\r\n    const getDisplay = (channel) => {\r\n        const isGridView = view === 'grid';\r\n        const props = {\r\n            channelItems: channel.items,\r\n        };\r\n        const GridDisplay = <Grid {...props}/>;\r\n        const ListDisplay = <List {...props}/>; \r\n        const display = isGridView ? GridDisplay : ListDisplay;\r\n        \r\n        return display;\r\n    };\r\n\r\n    const getNoDisplay = (channel) => {\r\n        const noDisplay = <p>No {channel.type} were found</p>;\r\n        return noDisplay;\r\n    };\r\n\r\n    const getChannelDisplay = (channel) => {\r\n        const display = getDisplay(channel); \r\n        const noDisplay = getNoDisplay(channel);\r\n        const title = captilizeFirstLetter(channel.type);\r\n        let body;\r\n        if (channel.pendingMsg) body = <p>{channel.pendingMsg}</p>;\r\n        else if (channel.error.statusCode) body = <p>{channel.error.userMsg}</p>\r\n        else body = channel.items.length ? display : noDisplay;\r\n\r\n        return (\r\n            <>\r\n                <h1>{title}</h1>\r\n                    {body}\r\n            </>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {\r\n            channels.map((channel, index) => {\r\n                if (channel.open) {\r\n                    const channelDisplay = getChannelDisplay(channel);\r\n                    return (\r\n                        <div key={index}>\r\n                            {channelDisplay}\r\n                        </div>\r\n                    )\r\n                } else {\r\n                    return null;\r\n                }         \r\n            })  \r\n            }\r\n        </div>\r\n    );\r\n};\r\n \r\nexport default ViewContainer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}