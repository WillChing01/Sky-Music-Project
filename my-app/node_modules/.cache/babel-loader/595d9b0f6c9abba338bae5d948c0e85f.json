{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamg\\\\Documents\\\\temp\\\\sky\\\\Sky-Music-Project\\\\my-app\\\\src\\\\components\\\\Home\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport { getChannelTopInfo, getQueryFetchInfo } from '../../utility/fetchNapster';\nimport { useSearchParams } from 'react-router-dom';\nimport ViewContainer from '../ViewContainer/ViewContainer';\nimport './Home.css';\nimport useFetch from '../../hooks/useFetch';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst limit = 3;\n\nconst getFetchArgs = (query, channel) => {\n  const fetchArgs = query ? getQueryFetchInfo(query, channel, limit) : getChannelTopInfo(channel, limit);\n  return fetchArgs;\n};\n\nconst apikey = process.env.REACT_APP_NAPSTER_API_KEY;\n\nconst Home = () => {\n  _s();\n\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const tracksFetchArgs = getFetchArgs(query, 'tracks');\n  const albumsFetchArgs = getFetchArgs(query, 'albums');\n  const artistsFetchArgs = getFetchArgs(query, 'artists');\n  const deps = [searchParams];\n  const fetchOptions = {\n    headers: {\n      apikey\n    }\n  };\n  const tracks = useFetch(...tracksFetchArgs, deps, fetchOptions);\n  const albums = useFetch(...albumsFetchArgs, deps, fetchOptions);\n  const artists = useFetch(...artistsFetchArgs, deps, fetchOptions);\n  const data = {\n    tracks,\n    albums,\n    artists\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space\",\n    children: data && /*#__PURE__*/_jsxDEV(ViewContainer, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"QSqVUgkaDyuert01iNLbh6FUZfk=\", false, function () {\n  return [useSearchParams, useFetch, useFetch, useFetch];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["getChannelTopInfo","getQueryFetchInfo","useSearchParams","ViewContainer","useFetch","limit","getFetchArgs","query","channel","fetchArgs","apikey","process","env","REACT_APP_NAPSTER_API_KEY","Home","searchParams","get","tracksFetchArgs","albumsFetchArgs","artistsFetchArgs","deps","fetchOptions","headers","tracks","albums","artists","data"],"sources":["C:/Users/adamg/Documents/temp/sky/Sky-Music-Project/my-app/src/components/Home/Home.js"],"sourcesContent":["import { getChannelTopInfo, getQueryFetchInfo } from '../../utility/fetchNapster';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nimport ViewContainer from '../ViewContainer/ViewContainer';\r\n\r\nimport './Home.css';\r\nimport useFetch from '../../hooks/useFetch';\r\n\r\nconst limit = 3;\r\nconst getFetchArgs = (query, channel) => {\r\n    const fetchArgs = query ? getQueryFetchInfo(query, channel, limit)\r\n                            : getChannelTopInfo(channel, limit);\r\n    return fetchArgs;\r\n};\r\n\r\nconst apikey = process.env.REACT_APP_NAPSTER_API_KEY;\r\n\r\nconst Home = () => {\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const query = searchParams.get('query');\r\n  \r\n  const tracksFetchArgs = getFetchArgs(query, 'tracks');\r\n  const albumsFetchArgs = getFetchArgs(query, 'albums');\r\n  const artistsFetchArgs = getFetchArgs(query, 'artists');\r\n\r\n  const deps = [searchParams];\r\n  const fetchOptions = {headers: { apikey }};\r\n\r\n  const tracks = useFetch(...tracksFetchArgs, deps, fetchOptions);\r\n  const albums = useFetch(...albumsFetchArgs, deps, fetchOptions);\r\n  const artists = useFetch(...artistsFetchArgs, deps, fetchOptions);\r\n\r\n  const data = {\r\n    tracks, \r\n    albums, \r\n    artists\r\n  };\r\n\r\n  return (\r\n    <div className='space'>\r\n      {data && <ViewContainer data={data} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;"],"mappings":";;;AAAA,SAASA,iBAAT,EAA4BC,iBAA5B,QAAqD,4BAArD;AACA,SAASC,eAAT,QAAgC,kBAAhC;AAEA,OAAOC,aAAP,MAA0B,gCAA1B;AAEA,OAAO,YAAP;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,KAAK,GAAG,CAAd;;AACA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;EACrC,MAAMC,SAAS,GAAGF,KAAK,GAAGN,iBAAiB,CAACM,KAAD,EAAQC,OAAR,EAAiBH,KAAjB,CAApB,GACGL,iBAAiB,CAACQ,OAAD,EAAUH,KAAV,CAD3C;EAEA,OAAOI,SAAP;AACH,CAJD;;AAMA,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,yBAA3B;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACjB,MAAM,CAACC,YAAD,IAAiBb,eAAe,EAAtC;EAEA,MAAMK,KAAK,GAAGQ,YAAY,CAACC,GAAb,CAAiB,OAAjB,CAAd;EAEA,MAAMC,eAAe,GAAGX,YAAY,CAACC,KAAD,EAAQ,QAAR,CAApC;EACA,MAAMW,eAAe,GAAGZ,YAAY,CAACC,KAAD,EAAQ,QAAR,CAApC;EACA,MAAMY,gBAAgB,GAAGb,YAAY,CAACC,KAAD,EAAQ,SAAR,CAArC;EAEA,MAAMa,IAAI,GAAG,CAACL,YAAD,CAAb;EACA,MAAMM,YAAY,GAAG;IAACC,OAAO,EAAE;MAAEZ;IAAF;EAAV,CAArB;EAEA,MAAMa,MAAM,GAAGnB,QAAQ,CAAC,GAAGa,eAAJ,EAAqBG,IAArB,EAA2BC,YAA3B,CAAvB;EACA,MAAMG,MAAM,GAAGpB,QAAQ,CAAC,GAAGc,eAAJ,EAAqBE,IAArB,EAA2BC,YAA3B,CAAvB;EACA,MAAMI,OAAO,GAAGrB,QAAQ,CAAC,GAAGe,gBAAJ,EAAsBC,IAAtB,EAA4BC,YAA5B,CAAxB;EAEA,MAAMK,IAAI,GAAG;IACXH,MADW;IAEXC,MAFW;IAGXC;EAHW,CAAb;EAMA,oBACE;IAAK,SAAS,EAAC,OAAf;IAAA,UACGC,IAAI,iBAAI,QAAC,aAAD;MAAe,IAAI,EAAEA;IAArB;MAAA;MAAA;MAAA;IAAA;EADX;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CA3BD;;GAAMZ,I;UACmBZ,e,EAWRE,Q,EACAA,Q,EACCA,Q;;;KAdZU,I;AA6BN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}