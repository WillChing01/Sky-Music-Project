{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamg\\\\Documents\\\\temp\\\\sky\\\\Sky-Music-Project\\\\my-app\\\\src\\\\components\\\\ScrollText\\\\ScrollText.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './ScrollText.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst scrollSpeed = 0.3;\n\nconst ScrollText = _ref => {\n  _s();\n\n  let {\n    message,\n    containerId\n  } = _ref;\n  const scrollingId = 'scrolling-' + containerId;\n  const scrollingSpanId = 'scrolling-' + containerId + '-span';\n  const [transitionTime, setTransitionTime] = useState(0);\n\n  const getRoot = () => {\n    return getComputedStyle(document.body);\n  };\n\n  const getScrollBar = () => {\n    return document.getElementById(scrollingId);\n  };\n\n  const getScrollBarSpan = () => {\n    return document.getElementById(scrollingSpanId);\n  };\n\n  const getScrollBarWidth = () => {\n    const scrollBar = document.getElementById(scrollingId);\n    return scrollBar.clientWidth;\n  };\n\n  const getScrollBarSpanWidth = () => {\n    const scrollBarSpan = document.getElementById(scrollingSpanId);\n    const style = getComputedStyle(scrollBarSpan);\n    const scrollBarSpanWidth = parseFloat(style.width);\n    return scrollBarSpanWidth;\n  };\n\n  const getShadowWidthFraction = () => {\n    const root = getRoot();\n    return root.getPropertyValue('--shadow-width');\n  };\n\n  useEffect(() => {\n    const getTransitionDistance = () => {\n      const scrollWidth = getScrollBarWidth();\n      const elementWidth = getScrollBarSpanWidth();\n      const shadowWidthFraction = getShadowWidthFraction();\n      const shadowWidth = shadowWidthFraction * scrollWidth;\n      const transitionDistance = elementWidth + 2 * shadowWidth - scrollWidth;\n      return transitionDistance;\n    };\n\n    const setScrollTime = () => {\n      const element = document.getElementById(scrollingSpanId);\n      const scrollWidth = getScrollBarWidth();\n      const transitionDistance = getTransitionDistance();\n      const transitionFraction = Math.max(0, transitionDistance / scrollWidth);\n      const newTime = String(transitionFraction / scrollSpeed);\n      element.style.transitionDuration = newTime + 's';\n      setTransitionTime(newTime);\n    };\n\n    setScrollTime();\n  }, [message]);\n  useEffect(() => {\n    let isForward = false;\n\n    const changeTransform = argument => {\n      const scrollBarSpan = getScrollBarSpan();\n      scrollBarSpan.style.transform = argument;\n    };\n\n    const forwardAnimation = e => {\n      //change the translateX to length.\n      const scrollWidth = String(getScrollBarWidth()) + 'px';\n      changeTransform('translateX(min(calc(var(--shadow-width) * ' + scrollWidth + '), calc((1 - var(--shadow-width)) * ' + scrollWidth + ' - 100%)))');\n    };\n\n    const backwardAnimation = e => {\n      //revert the translateX to original.\n      const scrollWidth = String(getScrollBarWidth()) + 'px';\n      changeTransform('translateX(calc(var(--shadow-width) * ' + scrollWidth + '))');\n    };\n\n    const toggleDirection = () => {\n      if (isForward) {\n        backwardAnimation();\n      } else {\n        forwardAnimation();\n      }\n\n      isForward = !isForward;\n    };\n\n    backwardAnimation();\n    const timing = 1000 * transitionTime + 1000;\n    const scrollInterval = setInterval(() => {\n      toggleDirection();\n    }, timing);\n    return () => {\n      clearInterval(scrollInterval);\n    };\n  }, [transitionTime]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"shadow-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: scrollingId,\n      className: \"scroll-box\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        id: scrollingSpanId,\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ScrollText, \"9Xo79h1GVOOx1RdPy9PKxhpXHAg=\");\n\n_c = ScrollText;\nexport default ScrollText;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScrollText\");","map":{"version":3,"names":["useEffect","useState","scrollSpeed","ScrollText","message","containerId","scrollingId","scrollingSpanId","transitionTime","setTransitionTime","getRoot","getComputedStyle","document","body","getScrollBar","getElementById","getScrollBarSpan","getScrollBarWidth","scrollBar","clientWidth","getScrollBarSpanWidth","scrollBarSpan","style","scrollBarSpanWidth","parseFloat","width","getShadowWidthFraction","root","getPropertyValue","getTransitionDistance","scrollWidth","elementWidth","shadowWidthFraction","shadowWidth","transitionDistance","setScrollTime","element","transitionFraction","Math","max","newTime","String","transitionDuration","isForward","changeTransform","argument","transform","forwardAnimation","e","backwardAnimation","toggleDirection","timing","scrollInterval","setInterval","clearInterval"],"sources":["C:/Users/adamg/Documents/temp/sky/Sky-Music-Project/my-app/src/components/ScrollText/ScrollText.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nimport './ScrollText.css';\r\n\r\nconst scrollSpeed = 0.3;\r\n\r\nconst ScrollText = ({ message, containerId }) => {\r\n\r\n    const scrollingId = 'scrolling-' + containerId;\r\n    const scrollingSpanId = 'scrolling-' + containerId + '-span';\r\n\r\n    const [ transitionTime, setTransitionTime ] = useState(0);\r\n\r\n    const getRoot = () => {\r\n        return getComputedStyle(document.body);\r\n    };\r\n\r\n    const getScrollBar = () => {\r\n        return document.getElementById(scrollingId);\r\n    };\r\n\r\n    const getScrollBarSpan = () => {\r\n        return document.getElementById(scrollingSpanId);\r\n    };\r\n\r\n    const getScrollBarWidth = () => {\r\n        const scrollBar = document.getElementById(scrollingId);\r\n        return scrollBar.clientWidth;\r\n    };\r\n\r\n    const getScrollBarSpanWidth = () => {\r\n        const scrollBarSpan = document.getElementById(scrollingSpanId);\r\n        const style = getComputedStyle(scrollBarSpan);\r\n        const scrollBarSpanWidth = parseFloat(style.width);\r\n        return scrollBarSpanWidth;\r\n    }\r\n    \r\n    const getShadowWidthFraction = () => {\r\n        const root = getRoot();\r\n        return root.getPropertyValue('--shadow-width');\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getTransitionDistance = () => {\r\n            const scrollWidth = getScrollBarWidth();\r\n            const elementWidth = getScrollBarSpanWidth();\r\n            const shadowWidthFraction = getShadowWidthFraction();\r\n            const shadowWidth = shadowWidthFraction * scrollWidth;\r\n            \r\n            const transitionDistance = elementWidth + 2 * shadowWidth - scrollWidth;\r\n\r\n            return transitionDistance;\r\n        }\r\n\r\n        const setScrollTime = () => {\r\n            const element = document.getElementById(scrollingSpanId);\r\n            \r\n            const scrollWidth = getScrollBarWidth();\r\n            const transitionDistance = getTransitionDistance();\r\n            const transitionFraction = Math.max(0, transitionDistance / scrollWidth);\r\n            \r\n            const newTime = String(transitionFraction / scrollSpeed);\r\n            element.style.transitionDuration = newTime + 's';\r\n            setTransitionTime(newTime);\r\n        };\r\n\r\n        setScrollTime();\r\n        \r\n    }, [message]);\r\n\r\n    useEffect(() => {\r\n        let isForward = false;\r\n\r\n        const changeTransform = (argument) => {\r\n            const scrollBarSpan = getScrollBarSpan();\r\n            scrollBarSpan.style.transform = argument;\r\n        };\r\n\r\n        const forwardAnimation = (e) => {\r\n            //change the translateX to length.\r\n            const scrollWidth = String(getScrollBarWidth()) + 'px';\r\n            changeTransform('translateX(min(calc(var(--shadow-width) * ' + scrollWidth + '), calc((1 - var(--shadow-width)) * ' + scrollWidth + ' - 100%)))');\r\n        };\r\n        \r\n        const backwardAnimation = (e) => {\r\n            //revert the translateX to original.\r\n            const scrollWidth = String(getScrollBarWidth()) + 'px';\r\n            changeTransform('translateX(calc(var(--shadow-width) * ' + scrollWidth + '))');\r\n        };\r\n\r\n        const toggleDirection = () => {\r\n            if (isForward) {\r\n                backwardAnimation();\r\n            }\r\n            else {\r\n                forwardAnimation();\r\n            }\r\n            isForward = !isForward;\r\n        }\r\n\r\n        backwardAnimation();\r\n\r\n        const timing = 1000 * transitionTime + 1000;\r\n        const scrollInterval = setInterval(() => {toggleDirection();}, timing);\r\n\r\n        return () => {\r\n            clearInterval(scrollInterval);\r\n        };\r\n\r\n    }, [transitionTime]);\r\n\r\n    return(\r\n        <div className='shadow-wrapper'>\r\n            <div id={scrollingId} className='scroll-box'>\r\n                <span id={scrollingSpanId}>{message}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScrollText;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}