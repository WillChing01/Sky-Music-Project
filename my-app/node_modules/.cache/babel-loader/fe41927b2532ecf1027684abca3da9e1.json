{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamg\\\\Documents\\\\temp\\\\sky\\\\Sky-Music-Project\\\\my-app\\\\src\\\\components\\\\Grid\\\\Grid.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from 'react-redux';\nimport { shouldBeFiltered } from '../../utility/filterResults';\nimport { getItemInfo } from '../../utility/parseMusicItem';\nimport Card from '../Card/Card';\nimport WrapAlbum from '../WrapAlbum/WrapAlbum';\nimport WrapArtist from '../WrapArtist/WrapArtist';\nimport './Grid.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Grid = _ref => {\n  _s();\n\n  let {\n    channelItems\n  } = _ref;\n  const filter = useSelector(state => state.filter);\n\n  const getDisplayChannelItem = (item, index) => {\n    const itemInfo = getItemInfo(item);\n    if (shouldBeFiltered(itemInfo, filter)) return null;\n\n    const card = /*#__PURE__*/_jsxDEV(Card, {\n      itemInfo: itemInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 22\n    }, this);\n\n    const wrapProps = {\n      key: index,\n      itemInfo,\n      card,\n      isCard: true\n    };\n\n    switch (itemInfo.type) {\n      case 'track':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"m-4\",\n          children: card\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 24\n        }, this);\n\n      case 'album':\n        return /*#__PURE__*/_jsxDEV(WrapAlbum, { ...wrapProps,\n          children: card\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 24\n        }, this);\n\n      case 'artist':\n        return /*#__PURE__*/_jsxDEV(WrapArtist, { ...wrapProps,\n          children: card\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 24\n        }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-view\",\n    children: channelItems.map(getDisplayChannelItem)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Grid, \"CTxSmkRKeY17NmVdjL4FcSzygAI=\", false, function () {\n  return [useSelector];\n});\n\n_c = Grid;\nexport default Grid;\n\nvar _c;\n\n$RefreshReg$(_c, \"Grid\");","map":{"version":3,"names":["useSelector","shouldBeFiltered","getItemInfo","Card","WrapAlbum","WrapArtist","Grid","channelItems","filter","state","getDisplayChannelItem","item","index","itemInfo","card","wrapProps","key","isCard","type","map"],"sources":["C:/Users/adamg/Documents/temp/sky/Sky-Music-Project/my-app/src/components/Grid/Grid.js"],"sourcesContent":["import { useSelector } from 'react-redux';\r\nimport { shouldBeFiltered } from '../../utility/filterResults';\r\nimport { getItemInfo } from '../../utility/parseMusicItem';\r\n\r\nimport Card from '../Card/Card';\r\nimport WrapAlbum from '../WrapAlbum/WrapAlbum';\r\nimport WrapArtist from '../WrapArtist/WrapArtist';\r\n\r\nimport './Grid.css';\r\n\r\nconst Grid = ({channelItems}) => {\r\n    const filter = useSelector((state) => state.filter);\r\n\r\n    const getDisplayChannelItem = (item, index) => {\r\n        const itemInfo = getItemInfo(item);\r\n        if (shouldBeFiltered(itemInfo, filter)) return null;\r\n        const card = <Card itemInfo={itemInfo}/>;\r\n        const wrapProps = {\r\n            key: index,\r\n            itemInfo,\r\n            card,\r\n            isCard: true\r\n        };\r\n        switch (itemInfo.type) {\r\n            case 'track':\r\n                return <div className='m-4' key={index}>\r\n                          {card}\r\n                       </div>;\r\n            case 'album': \r\n                return <WrapAlbum {...wrapProps}>\r\n                          {card}\r\n                       </WrapAlbum>;\r\n            case 'artist':\r\n                return <WrapArtist {...wrapProps}>\r\n                          {card}\r\n                       </WrapArtist>;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='grid-view'>\r\n            {channelItems.map(getDisplayChannelItem)}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Grid;"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,SAASC,WAAT,QAA4B,8BAA5B;AAEA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,OAAO,YAAP;;;AAEA,MAAMC,IAAI,GAAG,QAAoB;EAAA;;EAAA,IAAnB;IAACC;EAAD,CAAmB;EAC7B,MAAMC,MAAM,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACD,MAAlB,CAA1B;;EAEA,MAAME,qBAAqB,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;IAC3C,MAAMC,QAAQ,GAAGX,WAAW,CAACS,IAAD,CAA5B;IACA,IAAIV,gBAAgB,CAACY,QAAD,EAAWL,MAAX,CAApB,EAAwC,OAAO,IAAP;;IACxC,MAAMM,IAAI,gBAAG,QAAC,IAAD;MAAM,QAAQ,EAAED;IAAhB;MAAA;MAAA;MAAA;IAAA,QAAb;;IACA,MAAME,SAAS,GAAG;MACdC,GAAG,EAAEJ,KADS;MAEdC,QAFc;MAGdC,IAHc;MAIdG,MAAM,EAAE;IAJM,CAAlB;;IAMA,QAAQJ,QAAQ,CAACK,IAAjB;MACI,KAAK,OAAL;QACI,oBAAO;UAAK,SAAS,EAAC,KAAf;UAAA,UACIJ;QADJ,GAA0BF,KAA1B;UAAA;UAAA;UAAA;QAAA,QAAP;;MAGJ,KAAK,OAAL;QACI,oBAAO,QAAC,SAAD,OAAeG,SAAf;UAAA,UACID;QADJ;UAAA;UAAA;UAAA;QAAA,QAAP;;MAGJ,KAAK,QAAL;QACI,oBAAO,QAAC,UAAD,OAAgBC,SAAhB;UAAA,UACID;QADJ;UAAA;UAAA;UAAA;QAAA,QAAP;IAVR;EAcH,CAxBD;;EA0BA,oBACI;IAAK,SAAS,EAAC,WAAf;IAAA,UACKP,YAAY,CAACY,GAAb,CAAiBT,qBAAjB;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAlCD;;GAAMJ,I;UACaN,W;;;KADbM,I;AAoCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}