{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useAuthContext } from \"./useAuthContext\";\nconst LOGIN = 'LOGIN';\n\nconst useSignUp = () => {\n  _s();\n\n  const {\n    dispatch\n  } = useAuthContext();\n  const [isPending, setIsPending] = useState(false);\n  const [error, setError] = useState(null);\n\n  const login = user => {\n    localStorage.setItem('user', JSON.stringify(user));\n    dispatch({\n      type: LOGIN,\n      payload: user\n    });\n  };\n\n  const passwordChecksOut = (password, confirmPassword) => {\n    const arePasswordsMatching = password === confirmPassword;\n\n    if (!arePasswordsMatching) {\n      setError('Your passwords do not match');\n      return false;\n    }\n\n    const isPasswordLongEnough = password.length >= 8;\n\n    if (!isPasswordLongEnough) {\n      setError('Your password is too short.');\n      return false;\n    }\n\n    return true;\n  };\n\n  const signup = async (username, password, confirmPassword) => {\n    if (passwordChecksOut(username, password)) {}\n\n    setIsPending(true);\n    setError(null);\n    const fetchOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    };\n    const responseA = await fetch('/api/auth/signup');\n    console.log(\"get\", responseA);\n    const response = await fetch('/api/auth/signup', fetchOptions);\n    console.log(response);\n    const data = await response.json();\n\n    if (!response.ok) {\n      setIsPending(false);\n      setError(data.error);\n    } else {\n      login(data);\n      setIsPending(false);\n    }\n  };\n\n  return {\n    signup,\n    isPending,\n    error\n  };\n};\n\n_s(useSignUp, \"oPci7YUyoePvw0A+tHLyuDVCkHs=\", false, function () {\n  return [useAuthContext];\n});\n\nexport default useSignUp;","map":{"version":3,"names":["useState","useAuthContext","LOGIN","useSignUp","dispatch","isPending","setIsPending","error","setError","login","user","localStorage","setItem","JSON","stringify","type","payload","passwordChecksOut","password","confirmPassword","arePasswordsMatching","isPasswordLongEnough","length","signup","username","fetchOptions","method","headers","body","responseA","fetch","console","log","response","data","json","ok"],"sources":["C:/Users/adamg/Documents/temp/sky/Sky-Music-Project/my-app/src/hooks/useSignUp.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { useAuthContext } from \"./useAuthContext\";\r\n\r\nconst LOGIN = 'LOGIN';\r\n\r\nconst useSignUp = () => {\r\n    const { dispatch } = useAuthContext();\r\n    const [isPending, setIsPending] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const login = (user) => {\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n        dispatch({type: LOGIN, payload: user});\r\n    };\r\n\r\n    const passwordChecksOut = (password, confirmPassword) => {\r\n        const arePasswordsMatching = password === confirmPassword\r\n        if (!arePasswordsMatching) {\r\n            setError('Your passwords do not match');\r\n            return false;\r\n        }\r\n        const isPasswordLongEnough = password.length >= 8;\r\n        if (!isPasswordLongEnough) {\r\n            setError('Your password is too short.');\r\n            return false;\r\n        } \r\n        return true;\r\n    }\r\n\r\n    const signup = async (username, password, confirmPassword) => {\r\n        \r\n        if (passwordChecksOut(username, password)) {\r\n            \r\n        }\r\n\r\n        setIsPending(true)\r\n        setError(null)\r\n\r\n        const fetchOptions = {\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({ username, password })\r\n        }\r\n        const responseA = await fetch('/api/auth/signup');\r\n        console.log(\"get\", responseA)\r\n        const response = await fetch('/api/auth/signup', fetchOptions);\r\n        console.log(response)\r\n        const data = await response.json();\r\n\r\n        if (!response.ok) {\r\n            setIsPending(false);\r\n            setError(data.error);\r\n        } else {\r\n            login(data);\r\n            setIsPending(false)\r\n        }\r\n    };\r\n        \r\n    return { signup, isPending, error };\r\n};\r\n \r\nexport default useSignUp;\r\n"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,MAAMC,KAAK,GAAG,OAAd;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EACpB,MAAM;IAAEC;EAAF,IAAeH,cAAc,EAAnC;EACA,MAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;;EAEA,MAAMS,KAAK,GAAIC,IAAD,IAAU;IACpBC,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAA7B;IACAN,QAAQ,CAAC;MAACW,IAAI,EAAEb,KAAP;MAAcc,OAAO,EAAEN;IAAvB,CAAD,CAAR;EACH,CAHD;;EAKA,MAAMO,iBAAiB,GAAG,CAACC,QAAD,EAAWC,eAAX,KAA+B;IACrD,MAAMC,oBAAoB,GAAGF,QAAQ,KAAKC,eAA1C;;IACA,IAAI,CAACC,oBAAL,EAA2B;MACvBZ,QAAQ,CAAC,6BAAD,CAAR;MACA,OAAO,KAAP;IACH;;IACD,MAAMa,oBAAoB,GAAGH,QAAQ,CAACI,MAAT,IAAmB,CAAhD;;IACA,IAAI,CAACD,oBAAL,EAA2B;MACvBb,QAAQ,CAAC,6BAAD,CAAR;MACA,OAAO,KAAP;IACH;;IACD,OAAO,IAAP;EACH,CAZD;;EAcA,MAAMe,MAAM,GAAG,OAAOC,QAAP,EAAiBN,QAAjB,EAA2BC,eAA3B,KAA+C;IAE1D,IAAIF,iBAAiB,CAACO,QAAD,EAAWN,QAAX,CAArB,EAA2C,CAE1C;;IAEDZ,YAAY,CAAC,IAAD,CAAZ;IACAE,QAAQ,CAAC,IAAD,CAAR;IAEA,MAAMiB,YAAY,GAAG;MACjBC,MAAM,EAAE,MADS;MAEjBC,OAAO,EAAE;QAAC,gBAAgB;MAAjB,CAFQ;MAGjBC,IAAI,EAAEf,IAAI,CAACC,SAAL,CAAe;QAAEU,QAAF;QAAYN;MAAZ,CAAf;IAHW,CAArB;IAKA,MAAMW,SAAS,GAAG,MAAMC,KAAK,CAAC,kBAAD,CAA7B;IACAC,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBH,SAAnB;IACA,MAAMI,QAAQ,GAAG,MAAMH,KAAK,CAAC,kBAAD,EAAqBL,YAArB,CAA5B;IACAM,OAAO,CAACC,GAAR,CAAYC,QAAZ;IACA,MAAMC,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB;;IAEA,IAAI,CAACF,QAAQ,CAACG,EAAd,EAAkB;MACd9B,YAAY,CAAC,KAAD,CAAZ;MACAE,QAAQ,CAAC0B,IAAI,CAAC3B,KAAN,CAAR;IACH,CAHD,MAGO;MACHE,KAAK,CAACyB,IAAD,CAAL;MACA5B,YAAY,CAAC,KAAD,CAAZ;IACH;EACJ,CA3BD;;EA6BA,OAAO;IAAEiB,MAAF;IAAUlB,SAAV;IAAqBE;EAArB,CAAP;AACH,CAtDD;;GAAMJ,S;UACmBF,c;;;AAuDzB,eAAeE,SAAf"},"metadata":{},"sourceType":"module"}