{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamg\\\\Documents\\\\temp\\\\sky\\\\Sky-Music-Project\\\\my-app\\\\src\\\\components\\\\Player\\\\Player.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nextTrack, previousTrack } from '../../state/slices/playablePlaylist/playablePlaylistSlice';\nimport ProgressBar from '../ProgressBar/ProgressBar';\nimport TrackControls from '../TrackControls/TrackControls';\nimport VolumeControl from '../VolumeControl/VolumeControl';\nimport TrackInfoSnippet from '../TrackInfoSnippet/TrackInfoSnippet';\nimport './Player.css';\nimport { getPlaylistTrack } from '../../state/slices/playablePlaylist/playlistMutators';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const getPlayerAudio = () => {\n  const playerAudio = document.getElementById('player-audio');\n  return playerAudio;\n};\nexport const setPlayerAudioCurrentTime = newTime => {\n  const playerAudio = getPlayerAudio();\n  playerAudio.currentTime = newTime;\n};\nexport const setPlayerAudioVolume = newPlayerAudioVolume => {\n  const playerAudio = getPlayerAudio();\n  playerAudio.volume = newPlayerAudioVolume;\n};\nexport const setPlayerAudioLoop = newShouldLoop => {\n  const playerAudio = getPlayerAudio();\n  playerAudio.loop = newShouldLoop;\n};\n\nconst Player = () => {\n  _s();\n\n  const isPlaying = useSelector(state => state.playerConfig.isPlaying);\n  const {\n    currentPreviewURL\n  } = useSelector(state => {\n    const playlist = state.playablePlaylist.currentPlaylist;\n    return getPlaylistTrack(playlist);\n  });\n  const dispatch = useDispatch();\n  const togglePlayAudio = useCallback(() => {\n    const playerAudio = getPlayerAudio();\n    if (isPlaying) playerAudio.play();else playerAudio.pause();\n  }, [isPlaying, currentPreviewURL]);\n  useEffect(() => {\n    togglePlayAudio();\n  }, [togglePlayAudio]);\n\n  const setNextTrack = () => {\n    restartPlayer();\n    dispatch(nextTrack());\n  };\n\n  const setPreviousTrack = () => {\n    restartPlayer();\n    dispatch(previousTrack());\n  };\n\n  const restartPlayer = () => {\n    setPlayerAudioCurrentTime(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bottomscreen\",\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      id: \"player-audio\",\n      src: currentPreviewURL,\n      type: \"audio/mp3\",\n      onCanPlayThrough: togglePlayAudio,\n      onEnded: setNextTrack,\n      preload: \"metadata\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-panel\",\n      children: /*#__PURE__*/_jsxDEV(TrackInfoSnippet, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center-position\",\n      children: [/*#__PURE__*/_jsxDEV(TrackControls, {\n        currentPreviewURL: currentPreviewURL,\n        isPlaying: isPlaying,\n        setNextTrack: setNextTrack,\n        setPreviousTrack: setPreviousTrack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"region\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(VolumeControl, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Player, \"WMjff8+6IAHA+VF4UJa0OBecJ9g=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["useEffect","useCallback","useDispatch","useSelector","nextTrack","previousTrack","ProgressBar","TrackControls","VolumeControl","TrackInfoSnippet","getPlaylistTrack","getPlayerAudio","playerAudio","document","getElementById","setPlayerAudioCurrentTime","newTime","currentTime","setPlayerAudioVolume","newPlayerAudioVolume","volume","setPlayerAudioLoop","newShouldLoop","loop","Player","isPlaying","state","playerConfig","currentPreviewURL","playlist","playablePlaylist","currentPlaylist","dispatch","togglePlayAudio","play","pause","setNextTrack","restartPlayer","setPreviousTrack"],"sources":["C:/Users/adamg/Documents/temp/sky/Sky-Music-Project/my-app/src/components/Player/Player.js"],"sourcesContent":["import { useEffect, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { nextTrack, previousTrack } from '../../state/slices/playablePlaylist/playablePlaylistSlice';\r\n\r\nimport ProgressBar from '../ProgressBar/ProgressBar';\r\nimport TrackControls from '../TrackControls/TrackControls';\r\nimport VolumeControl from '../VolumeControl/VolumeControl';\r\nimport TrackInfoSnippet from '../TrackInfoSnippet/TrackInfoSnippet';\r\n\r\nimport './Player.css';\r\nimport { getPlaylistTrack } from '../../state/slices/playablePlaylist/playlistMutators';\r\n\r\nexport const getPlayerAudio = () => {\r\n    const playerAudio = document.getElementById('player-audio');\r\n    return playerAudio;\r\n};\r\n\r\nexport const setPlayerAudioCurrentTime = (newTime) => {\r\n    const playerAudio = getPlayerAudio();\r\n    playerAudio.currentTime = newTime;\r\n};\r\n\r\nexport const setPlayerAudioVolume = (newPlayerAudioVolume) => {\r\n    const playerAudio = getPlayerAudio();\r\n    playerAudio.volume = newPlayerAudioVolume;\r\n};\r\n\r\nexport const setPlayerAudioLoop = (newShouldLoop) => {\r\n    const playerAudio = getPlayerAudio();\r\n    playerAudio.loop = newShouldLoop;\r\n};\r\n\r\nconst Player = () => {\r\n    const isPlaying = useSelector((state) => state.playerConfig.isPlaying);\r\n    const { currentPreviewURL } = useSelector((state) => {\r\n        const playlist = state.playablePlaylist.currentPlaylist;\r\n        return getPlaylistTrack(playlist);\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const togglePlayAudio = useCallback(() => {\r\n        const playerAudio = getPlayerAudio();\r\n        if (isPlaying) playerAudio.play();\r\n        else playerAudio.pause();\r\n    }, [isPlaying, currentPreviewURL]);\r\n\r\n    useEffect(() => {\r\n        togglePlayAudio();\r\n\r\n    }, [togglePlayAudio]);\r\n\r\n    const setNextTrack = () => {\r\n        restartPlayer();\r\n        dispatch(nextTrack())\r\n    };\r\n\r\n    const setPreviousTrack = () => {\r\n        restartPlayer();\r\n        dispatch(previousTrack());\r\n    };\r\n\r\n    const restartPlayer = () => {\r\n        setPlayerAudioCurrentTime(0);\r\n    };\r\n\r\n    return (\r\n        <div className='bottomscreen'>\r\n            <audio id='player-audio' src={currentPreviewURL} type='audio/mp3' onCanPlayThrough={togglePlayAudio} onEnded={setNextTrack} preload='metadata'></audio>\r\n            <div className='left-panel'>\r\n                <TrackInfoSnippet />\r\n            </div>\r\n            <div className='center-position'>\r\n                <TrackControls \r\n                    currentPreviewURL={currentPreviewURL}\r\n                    isPlaying={isPlaying}\r\n                    setNextTrack={setNextTrack}\r\n                    setPreviousTrack={setPreviousTrack}\r\n                />\r\n                <ProgressBar />\r\n            </div>\r\n            <span className='region'/>\r\n            <VolumeControl />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Player;"],"mappings":"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"},"metadata":{},"sourceType":"module"}