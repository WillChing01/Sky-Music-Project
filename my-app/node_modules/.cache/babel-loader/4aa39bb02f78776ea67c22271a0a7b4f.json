{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamg\\\\Documents\\\\temp\\\\sky\\\\Sky-Music-Project\\\\my-app\\\\src\\\\components\\\\TrackControls\\\\TrackControls.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleIsPlaying, toggleIsShuffle, toggleShouldLoop } from '../../state/slices/playerConfig/playerConfigSlice';\nimport { setPlayerAudioLoop, setPlayerAudioCurrentTime, getPlayerAudio } from '../Player/Player';\nimport { shuffle, unshuffle } from '../../state/slices/playablePlaylist/playablePlaylistSlice';\nimport useKeyPress from '../../hooks/useKeyPress';\nimport './TrackControls.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tinyTimeIncrement = 0.0001;\nconst skipIncrement = 5;\n\nconst TrackControls = _ref => {\n  _s();\n\n  let {\n    isPlaying,\n    currentPreviewURL,\n    setNextTrack,\n    setPreviousTrack\n  } = _ref;\n  const [isShuffle, setIsShuffle] = useState(false);\n  const {\n    shouldLoop\n  } = useSelector(state => state.playerConfig);\n  const dispatch = useDispatch();\n\n  const givenTrackLoadedIntoPlayer = effect => {\n    const isTrackLoadedIntoPlayer = !!currentPreviewURL;\n\n    if (isTrackLoadedIntoPlayer) {\n      effect();\n    }\n  };\n\n  const handleToggleShuffleTracks = () => {\n    if (isShuffle) {\n      setIsShuffle(false);\n      dispatch(unshuffle());\n    } else {\n      setIsShuffle(true);\n      dispatch(shuffle());\n    }\n  };\n\n  const handleToggleLoopTrack = () => {\n    setPlayerAudioLoop(!shouldLoop);\n    dispatch(toggleShouldLoop());\n  };\n\n  const handleToggleIsPlaying = () => {\n    const effect = () => {\n      dispatch(toggleIsPlaying());\n    };\n\n    givenTrackLoadedIntoPlayer(effect);\n  };\n\n  const handlePreviousTrack = () => {\n    const effect = () => {\n      //setPlayerAudioCurrentTime(0);\n      setPreviousTrack();\n    };\n\n    givenTrackLoadedIntoPlayer(effect);\n  };\n\n  const handleNextTrack = () => {\n    const effect = () => {\n      // const playerAudio = getPlayerAudio();\n      // const trackDuration = playerAudio.duration;\n      // const newPlayerAudioTime = trackDuration - tinyTimeIncrement;\n      // setPlayerAudioCurrentTime(newPlayerAudioTime);  \n      setNextTrack();\n    };\n\n    givenTrackLoadedIntoPlayer(effect);\n  };\n\n  const skipBackwards = () => {\n    const effect = () => {\n      const playerAudio = getPlayerAudio();\n      const currentPlayerAudioTime = playerAudio.currentTime;\n      const candidatePlayerAudioTime = currentPlayerAudioTime - skipIncrement;\n      const newPlayerAudioTime = Math.max(0, candidatePlayerAudioTime);\n      setPlayerAudioCurrentTime(newPlayerAudioTime);\n    };\n\n    givenTrackLoadedIntoPlayer(effect);\n  };\n\n  const skipForwards = () => {\n    const effect = () => {\n      const playerAudio = getPlayerAudio();\n      const currentPlayerAudioTime = playerAudio.currentTime;\n      const trackDuration = playerAudio.duration;\n      const prePauseDuration = trackDuration - tinyTimeIncrement;\n      const candidatePlayerAudioTime = currentPlayerAudioTime + skipIncrement;\n      const newPlayerAudioTime = Math.min(prePauseDuration, candidatePlayerAudioTime);\n      setPlayerAudioCurrentTime(newPlayerAudioTime);\n    };\n\n    givenTrackLoadedIntoPlayer(effect);\n  };\n\n  const handleTrackControlsKeyPress = e => {\n    if (document.activeElement.type !== 'search') {\n      const key = e.key.toLowerCase();\n\n      switch (key) {\n        case 'k':\n          handleToggleIsPlaying();\n          break;\n\n        case 'j':\n          handlePreviousTrack();\n          break;\n\n        case 'l':\n          handleNextTrack();\n          break;\n\n        case 'arrowleft':\n          skipBackwards();\n          break;\n\n        case 'arrowright':\n          skipForwards();\n          break;\n\n        default:\n          break;\n      }\n    }\n  };\n\n  useKeyPress(handleTrackControlsKeyPress, [currentPreviewURL]);\n\n  const getShuffleIconClass = () => {\n    const shuffleIconClass = isShuffle === true ? 'bi bi-shuffle icon-selected' : 'bi bi-shuffle icon';\n    return shuffleIconClass;\n  };\n\n  const getLoopIconClass = () => {\n    const loopIconClass = shouldLoop === true ? 'bi bi-arrow-repeat icon-selected' : 'bi bi-arrow-repeat icon';\n    return loopIconClass;\n  };\n\n  const getPlayPauseIconClass = () => {\n    const playPauseIconClass = isPlaying === true ? 'bi bi-pause icon' : 'bi bi-play icon';\n    return playPauseIconClass;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"spread\",\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      className: getShuffleIconClass(),\n      onClick: handleToggleShuffleTracks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"bi bi-skip-backward icon\",\n      onClick: handlePreviousTrack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      className: getPlayPauseIconClass(),\n      onClick: handleToggleIsPlaying\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"bi bi-skip-forward icon\",\n      onClick: handleNextTrack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      className: getLoopIconClass(),\n      onClick: handleToggleLoopTrack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TrackControls, \"ZmQIkuPwdUn/aTdrDWxE4qKoG5k=\", false, function () {\n  return [useSelector, useDispatch, useKeyPress];\n});\n\n_c = TrackControls;\nexport default TrackControls;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrackControls\");","map":{"version":3,"names":["useState","useDispatch","useSelector","toggleIsPlaying","toggleIsShuffle","toggleShouldLoop","setPlayerAudioLoop","setPlayerAudioCurrentTime","getPlayerAudio","shuffle","unshuffle","useKeyPress","tinyTimeIncrement","skipIncrement","TrackControls","isPlaying","currentPreviewURL","setNextTrack","setPreviousTrack","isShuffle","setIsShuffle","shouldLoop","state","playerConfig","dispatch","givenTrackLoadedIntoPlayer","effect","isTrackLoadedIntoPlayer","handleToggleShuffleTracks","handleToggleLoopTrack","handleToggleIsPlaying","handlePreviousTrack","handleNextTrack","skipBackwards","playerAudio","currentPlayerAudioTime","currentTime","candidatePlayerAudioTime","newPlayerAudioTime","Math","max","skipForwards","trackDuration","duration","prePauseDuration","min","handleTrackControlsKeyPress","e","document","activeElement","type","key","toLowerCase","getShuffleIconClass","shuffleIconClass","getLoopIconClass","loopIconClass","getPlayPauseIconClass","playPauseIconClass"],"sources":["C:/Users/adamg/Documents/temp/sky/Sky-Music-Project/my-app/src/components/TrackControls/TrackControls.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toggleIsPlaying, toggleIsShuffle, toggleShouldLoop }  from '../../state/slices/playerConfig/playerConfigSlice';\r\nimport { setPlayerAudioLoop, setPlayerAudioCurrentTime, getPlayerAudio } from '../Player/Player';\r\nimport { shuffle, unshuffle } from '../../state/slices/playablePlaylist/playablePlaylistSlice';\r\n\r\nimport useKeyPress from '../../hooks/useKeyPress';\r\n\r\nimport './TrackControls.css';\r\n\r\nconst tinyTimeIncrement = 0.0001;\r\nconst skipIncrement = 5;\r\n\r\nconst TrackControls = ({ isPlaying, currentPreviewURL, setNextTrack, setPreviousTrack }) => {\r\n\r\n    const [ isShuffle, setIsShuffle ] = useState(false);\r\n\r\n    const { shouldLoop } = useSelector((state) => state.playerConfig);\r\n    const dispatch = useDispatch();\r\n\r\n    const givenTrackLoadedIntoPlayer = (effect) => {\r\n        const isTrackLoadedIntoPlayer = !!currentPreviewURL;\r\n        if (isTrackLoadedIntoPlayer) {\r\n            effect();\r\n        }\r\n     };\r\n\r\n    const handleToggleShuffleTracks = () => {\r\n        if (isShuffle) {\r\n            setIsShuffle(false);\r\n            dispatch(unshuffle());\r\n        } else {\r\n            setIsShuffle(true);\r\n            dispatch(shuffle());\r\n        }\r\n    };\r\n\r\n    const handleToggleLoopTrack = () => {\r\n        setPlayerAudioLoop(!shouldLoop);\r\n        dispatch(toggleShouldLoop());\r\n    };\r\n        \r\n    const handleToggleIsPlaying = () => {\r\n        const effect = () => {\r\n            dispatch(toggleIsPlaying());\r\n        };\r\n\r\n        givenTrackLoadedIntoPlayer(effect); \r\n    };\r\n    \r\n    const handlePreviousTrack = () => {\r\n        const effect = () => {\r\n            //setPlayerAudioCurrentTime(0);\r\n            setPreviousTrack();\r\n        };\r\n\r\n        givenTrackLoadedIntoPlayer(effect);\r\n    };\r\n\r\n    const handleNextTrack = () => {\r\n        const effect = () => {\r\n            // const playerAudio = getPlayerAudio();\r\n            // const trackDuration = playerAudio.duration;\r\n            // const newPlayerAudioTime = trackDuration - tinyTimeIncrement;\r\n            // setPlayerAudioCurrentTime(newPlayerAudioTime);  \r\n            setNextTrack();\r\n        };\r\n\r\n        givenTrackLoadedIntoPlayer(effect);\r\n    };\r\n\r\n    const skipBackwards = () => {\r\n        const effect = () => {\r\n            const playerAudio = getPlayerAudio();\r\n            const currentPlayerAudioTime = playerAudio.currentTime;\r\n            const candidatePlayerAudioTime = currentPlayerAudioTime - skipIncrement;\r\n            const newPlayerAudioTime = Math.max(0, candidatePlayerAudioTime);\r\n            setPlayerAudioCurrentTime(newPlayerAudioTime);\r\n        };\r\n\r\n        givenTrackLoadedIntoPlayer(effect);\r\n    };\r\n\r\n    const skipForwards = () => {\r\n        const effect = () => {\r\n            const playerAudio = getPlayerAudio();\r\n            const currentPlayerAudioTime = playerAudio.currentTime;\r\n            const trackDuration = playerAudio.duration;\r\n            const prePauseDuration = trackDuration - tinyTimeIncrement; \r\n            const candidatePlayerAudioTime = currentPlayerAudioTime + skipIncrement;\r\n            const newPlayerAudioTime = Math.min(prePauseDuration, candidatePlayerAudioTime);\r\n            setPlayerAudioCurrentTime(newPlayerAudioTime);\r\n        };\r\n\r\n        givenTrackLoadedIntoPlayer(effect);\r\n    };\r\n\r\n    const handleTrackControlsKeyPress = (e) => {\r\n        if (document.activeElement.type !== 'search') {\r\n            const key = e.key.toLowerCase();\r\n            switch (key) {\r\n                case 'k':\r\n                    handleToggleIsPlaying();\r\n                    break;\r\n                case 'j':\r\n                    handlePreviousTrack();\r\n                    break;\r\n                case 'l':\r\n                    handleNextTrack();\r\n                    break;\r\n                case 'arrowleft':\r\n                    skipBackwards();\r\n                    break;\r\n                case 'arrowright':\r\n                    skipForwards();\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }\r\n     };\r\n\r\n     useKeyPress(handleTrackControlsKeyPress, [\r\n        currentPreviewURL\r\n     ]);\r\n\r\n\r\n    const getShuffleIconClass = () => {\r\n        const shuffleIconClass = isShuffle === true ? 'bi bi-shuffle icon-selected'\r\n                                                    : 'bi bi-shuffle icon';\r\n        return shuffleIconClass;\r\n    }\r\n\r\n    const getLoopIconClass = () => {\r\n        const loopIconClass = shouldLoop === true ? 'bi bi-arrow-repeat icon-selected'\r\n                                                  : 'bi bi-arrow-repeat icon';\r\n        return loopIconClass;\r\n    }\r\n\r\n    const getPlayPauseIconClass = () => {\r\n        const playPauseIconClass = isPlaying === true ? 'bi bi-pause icon'\r\n                                                      : 'bi bi-play icon';\r\n        return playPauseIconClass;\r\n    }\r\n\r\n    return (\r\n        <div className='spread'>\r\n            <i className={getShuffleIconClass()} onClick={handleToggleShuffleTracks}></i>\r\n            <i className='bi bi-skip-backward icon' onClick={handlePreviousTrack}></i>\r\n            <i className={getPlayPauseIconClass()} onClick={handleToggleIsPlaying}></i>\r\n            <i className='bi bi-skip-forward icon' onClick={handleNextTrack}></i>\r\n            <i className={getLoopIconClass()} onClick={handleToggleLoopTrack}></i>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default TrackControls;"],"mappings":"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"},"metadata":{},"sourceType":"module"}