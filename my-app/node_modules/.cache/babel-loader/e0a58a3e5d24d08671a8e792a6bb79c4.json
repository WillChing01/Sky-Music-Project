{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adamg\\\\Documents\\\\temp\\\\sky\\\\Sky-Music-Project\\\\my-app\\\\src\\\\components\\\\PlayIcon\\\\PlayIcon.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setTrack } from '../../state/slices/playablePlaylist/playablePlaylistSlice';\nimport { getPlaylistTrack } from '../../state/slices/playablePlaylist/playlistMutators';\nimport { setIsPlaying } from '../../state/slices/playerConfig/playerConfigSlice';\nimport \"./PlayIcon.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst playIconClass = 'bi-play-fill';\nconst pauseIconClass = 'bi-pause';\n\nconst PlayIcon = _ref => {\n  _s();\n\n  let {\n    itemInfo\n  } = _ref;\n  const [iconClass, setIconClass] = useState(playIconClass); //const {isPlaying, currentPreviewURL} = useSelector((state) => state.playerInfo);\n\n  const isPlaying = useSelector(state => state.playerConfig.isPlaying);\n  const {\n    currentPreviewURL\n  } = useSelector(state => {\n    const playlist = state.playablePlaylist.currentPlaylist;\n    return getPlaylistTrack(playlist);\n  });\n  const dispatch = useDispatch();\n  const configureIcons = useCallback(() => {\n    const isCurrentTrack = itemInfo.previewURL === currentPreviewURL;\n    if (isCurrentTrack && isPlaying) setIconClass(pauseIconClass);else setIconClass(playIconClass);\n  }, [currentPreviewURL, isPlaying, itemInfo.previewURL]);\n\n  const getIconClassName = () => {\n    const isPlaying = itemInfo.previewURL === currentPreviewURL;\n    if (isPlaying) return `bi display ${iconClass}`;else return `bi ${iconClass}`;\n  };\n\n  const handleClick = () => {\n    const {\n      previewURL,\n      name,\n      artist,\n      imgSrc\n    } = itemInfo;\n    const isCurrentTrack = itemInfo.previewURL === currentPreviewURL;\n    const newIsPlaying = isCurrentTrack ? !isPlaying : true;\n    const newTrack = {\n      currentPreviewURL: previewURL,\n      name,\n      artistName: artist,\n      imgSrc\n    };\n    dispatch(setTrack(newTrack));\n    dispatch(setIsPlaying(newIsPlaying));\n  };\n\n  useEffect(() => {\n    configureIcons();\n  }, [configureIcons]);\n  return /*#__PURE__*/_jsxDEV(\"i\", {\n    className: getIconClassName(),\n    onClick: handleClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PlayIcon, \"D0WWMF6d1BnyJEyOIFMUoIMPq6U=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = PlayIcon;\nexport default PlayIcon;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayIcon\");","map":{"version":3,"names":["useEffect","useState","useCallback","useDispatch","useSelector","setTrack","getPlaylistTrack","setIsPlaying","playIconClass","pauseIconClass","PlayIcon","itemInfo","iconClass","setIconClass","isPlaying","state","playerConfig","currentPreviewURL","playlist","playablePlaylist","currentPlaylist","dispatch","configureIcons","isCurrentTrack","previewURL","getIconClassName","handleClick","name","artist","imgSrc","newIsPlaying","newTrack","artistName"],"sources":["C:/Users/adamg/Documents/temp/sky/Sky-Music-Project/my-app/src/components/PlayIcon/PlayIcon.js"],"sourcesContent":["import { useEffect, useState, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setTrack } from '../../state/slices/playablePlaylist/playablePlaylistSlice';\r\nimport { getPlaylistTrack } from '../../state/slices/playablePlaylist/playlistMutators';\r\nimport { setIsPlaying } from '../../state/slices/playerConfig/playerConfigSlice';\r\n\r\nimport \"./PlayIcon.css\";\r\n\r\nconst playIconClass = 'bi-play-fill';\r\nconst pauseIconClass = 'bi-pause';\r\n\r\nconst PlayIcon = ({itemInfo}) => { \r\n    const [iconClass, setIconClass] = useState(playIconClass);\r\n\r\n    //const {isPlaying, currentPreviewURL} = useSelector((state) => state.playerInfo);\r\n    const isPlaying = useSelector((state) => state.playerConfig.isPlaying)\r\n    const { currentPreviewURL } = useSelector((state) => {\r\n        const playlist = state.playablePlaylist.currentPlaylist;\r\n        return getPlaylistTrack(playlist);\r\n    });\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const configureIcons = useCallback(() => {\r\n        const isCurrentTrack = itemInfo.previewURL === currentPreviewURL;\r\n        if (isCurrentTrack && isPlaying) setIconClass(pauseIconClass)\r\n        else setIconClass(playIconClass)\r\n    }, [currentPreviewURL, isPlaying, itemInfo.previewURL]);   \r\n\r\n    const getIconClassName = () => {\r\n        const isPlaying = itemInfo.previewURL === currentPreviewURL;\r\n        if (isPlaying) return `bi display ${iconClass}`;\r\n        else return `bi ${iconClass}`; \r\n    };\r\n\r\n    const handleClick = () => {\r\n        const { previewURL, name, artist, imgSrc } = itemInfo;\r\n        const isCurrentTrack = itemInfo.previewURL === currentPreviewURL;\r\n        const newIsPlaying = isCurrentTrack ? !isPlaying : true;\r\n        const newTrack = {\r\n            currentPreviewURL: previewURL,\r\n            name,\r\n            artistName: artist,\r\n            imgSrc,\r\n        };\r\n        dispatch(setTrack(newTrack));\r\n        dispatch(setIsPlaying(newIsPlaying));\r\n    };\r\n\r\n    useEffect(() => {\r\n        configureIcons();\r\n    }, [configureIcons]);\r\n\r\n    return (\r\n        <i className={getIconClassName()} onClick={handleClick}></i>\r\n    );\r\n}\r\n \r\nexport default PlayIcon;"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,2DAAzB;AACA,SAASC,gBAAT,QAAiC,sDAAjC;AACA,SAASC,YAAT,QAA6B,mDAA7B;AAEA,OAAO,gBAAP;;AAEA,MAAMC,aAAa,GAAG,cAAtB;AACA,MAAMC,cAAc,GAAG,UAAvB;;AAEA,MAAMC,QAAQ,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAACC;EAAD,CAAe;EAC7B,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAACO,aAAD,CAA1C,CAD6B,CAG7B;;EACA,MAAMM,SAAS,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,YAAN,CAAmBF,SAA/B,CAA7B;EACA,MAAM;IAAEG;EAAF,IAAwBb,WAAW,CAAEW,KAAD,IAAW;IACjD,MAAMG,QAAQ,GAAGH,KAAK,CAACI,gBAAN,CAAuBC,eAAxC;IACA,OAAOd,gBAAgB,CAACY,QAAD,CAAvB;EACH,CAHwC,CAAzC;EAKA,MAAMG,QAAQ,GAAGlB,WAAW,EAA5B;EAEA,MAAMmB,cAAc,GAAGpB,WAAW,CAAC,MAAM;IACrC,MAAMqB,cAAc,GAAGZ,QAAQ,CAACa,UAAT,KAAwBP,iBAA/C;IACA,IAAIM,cAAc,IAAIT,SAAtB,EAAiCD,YAAY,CAACJ,cAAD,CAAZ,CAAjC,KACKI,YAAY,CAACL,aAAD,CAAZ;EACR,CAJiC,EAI/B,CAACS,iBAAD,EAAoBH,SAApB,EAA+BH,QAAQ,CAACa,UAAxC,CAJ+B,CAAlC;;EAMA,MAAMC,gBAAgB,GAAG,MAAM;IAC3B,MAAMX,SAAS,GAAGH,QAAQ,CAACa,UAAT,KAAwBP,iBAA1C;IACA,IAAIH,SAAJ,EAAe,OAAQ,cAAaF,SAAU,EAA/B,CAAf,KACK,OAAQ,MAAKA,SAAU,EAAvB;EACR,CAJD;;EAMA,MAAMc,WAAW,GAAG,MAAM;IACtB,MAAM;MAAEF,UAAF;MAAcG,IAAd;MAAoBC,MAApB;MAA4BC;IAA5B,IAAuClB,QAA7C;IACA,MAAMY,cAAc,GAAGZ,QAAQ,CAACa,UAAT,KAAwBP,iBAA/C;IACA,MAAMa,YAAY,GAAGP,cAAc,GAAG,CAACT,SAAJ,GAAgB,IAAnD;IACA,MAAMiB,QAAQ,GAAG;MACbd,iBAAiB,EAAEO,UADN;MAEbG,IAFa;MAGbK,UAAU,EAAEJ,MAHC;MAIbC;IAJa,CAAjB;IAMAR,QAAQ,CAAChB,QAAQ,CAAC0B,QAAD,CAAT,CAAR;IACAV,QAAQ,CAACd,YAAY,CAACuB,YAAD,CAAb,CAAR;EACH,CAZD;;EAcA9B,SAAS,CAAC,MAAM;IACZsB,cAAc;EACjB,CAFQ,EAEN,CAACA,cAAD,CAFM,CAAT;EAIA,oBACI;IAAG,SAAS,EAAEG,gBAAgB,EAA9B;IAAkC,OAAO,EAAEC;EAA3C;IAAA;IAAA;IAAA;EAAA,QADJ;AAGH,CA7CD;;GAAMhB,Q;UAIgBN,W,EACYA,W,EAKbD,W;;;KAVfO,Q;AA+CN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}